<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.GameDataMapper">
	<insert id="insertSteamApi" parameterType="list">
		INSERT ALL
		<foreach collection="list" item="app">
			INTO game (g_num, g_title,
			n_title, steam_appid)
			VALUES (#{app.gNum}, #{app.gTitle},
			#{app.nTitle}, #{app.steamAppid})
		</foreach>
		SELECT * FROM dual
	</insert>
	<select id="selectAllAppIds" resultType="long">
		SELECT steam_appid FROM
		game
	</select>
	<select id="getGNum" parameterType="String" resultType="int">
		SELECT
		g_num FROM game WHERE n_title=#{nTitle}
	</select>
	<insert id="margeSteamApi" parameterType="Game">
		MERGE INTO game g
		USING (
		SELECT #{gTitle} AS g_title,
		#{nTitle} AS n_title,
		#{steamAppid} AS steam_appid
		FROM dual
		) api
		ON (g.n_title = api.n_title)
		WHEN MATCHED THEN
		UPDATE SET g.steam_appid = api.steam_appid
		WHEN NOT MATCHED THEN
		INSERT (g_num, g_title, n_title, steam_appid)
		VALUES (seq_game.nextval, api.g_title, api.n_title, api.steam_appid)
	</insert>

	<insert id="margeSteamDC">
		MERGE INTO game g
		USING (SELECT title, n_title, thumb
		FROM (
		SELECT title, n_title, thumb,
		ROW_NUMBER() OVER (PARTITION BY
		n_title ORDER BY title) AS rn
		FROM steam_dc
		)
		WHERE rn = 1) s
		ON
		(g.n_title = s.n_title)
		WHEN MATCHED THEN
		UPDATE SET
		g.thumb=s.thumb
		WHERE s.thumb IS NOT NULL
		WHEN NOT MATCHED THEN
		INSERT (g_num, g_title,
		n_title,
		thumb)
		VALUES (seq_game.nextval, s.title, s.n_title, s.thumb)
	</insert>

	<insert id="margeSteamNew">
		MERGE INTO game g
		USING (SELECT title, n_title, thumb
		FROM (
		SELECT title, n_title, thumb,
		ROW_NUMBER() OVER (PARTITION BY
		n_title ORDER BY title) AS rn
		FROM steam_new
		)
		WHERE rn = 1) s
		ON
		(g.n_title = s.n_title)
		WHEN MATCHED THEN
		UPDATE SET
		g.thumb=s.thumb
		WHERE s.thumb IS NOT NULL
		WHEN NOT MATCHED THEN
		INSERT (g_num, g_title,
		n_title,
		thumb)
		VALUES (seq_game.nextval, s.title, s.n_title, s.thumb)
	</insert>
	
	<insert id="margeSteamTop">
		MERGE INTO game g
		USING (SELECT title, n_title, thumb
		FROM (
		SELECT title, n_title, thumb,
		ROW_NUMBER() OVER (PARTITION BY
		n_title ORDER BY title) AS rn
		FROM steam_top
		)
		WHERE rn = 1) s
		ON
		(g.n_title = s.n_title)
		WHEN MATCHED THEN
		UPDATE SET
		g.thumb=s.thumb
		WHERE s.thumb IS NOT NULL
		WHEN NOT MATCHED THEN
		INSERT (g_num, g_title,
		n_title,
		thumb)
		VALUES (seq_game.nextval, s.title, s.n_title, s.thumb)
	</insert>

	<insert id="margeDirectNew">
		MERGE INTO game g
		USING (
		SELECT title, n_title, thumb
		FROM (
		SELECT title, n_title, thumb,
		ROW_NUMBER() OVER (PARTITION BY n_title ORDER BY title) AS rn
		FROM direct_new
		) dsub
		WHERE rn = 1
		) d
		ON (g.n_title = d.n_title)
		WHEN MATCHED THEN
		UPDATE SET g.thumb = d.thumb
		WHERE d.thumb IS NOT NULL
		WHEN NOT MATCHED THEN
		INSERT (g_num, g_title, n_title, thumb)
		VALUES (seq_game.nextval, d.title, d.n_title, d.thumb)
	</insert>

	<insert id="margeNintendoDC">
		MERGE INTO game g
		USING (
		SELECT title, n_title, thumb
		FROM (
		SELECT title, n_title, thumb,
		ROW_NUMBER() OVER (PARTITION BY n_title ORDER BY title) AS rn
		FROM nintendo_dc
		) dsub
		WHERE rn = 1
		) n
		ON (g.n_title = n.n_title)
		WHEN MATCHED THEN
		UPDATE SET g.thumb = n.thumb
		WHERE n.thumb IS NOT NULL
		WHEN NOT MATCHED THEN
		INSERT (g_num, g_title, n_title, thumb)
		VALUES (seq_game.nextval, n.title, n.n_title, n.thumb)
	</insert>

	<insert id="margeNintendoNew">
		MERGE INTO game g
		USING (
		SELECT title, n_title, thumb
		FROM (
		SELECT title, n_title, thumb,
		ROW_NUMBER() OVER (PARTITION BY n_title ORDER BY title) AS rn
		FROM nintendo_new
		) dsub
		WHERE rn = 1
		) n
		ON (g.n_title = n.n_title)
		WHEN MATCHED THEN
		UPDATE SET g.thumb = n.thumb
		WHERE n.thumb IS NOT NULL
		WHEN NOT MATCHED THEN
		INSERT (g_num, g_title, n_title, thumb)
		VALUES (seq_game.nextval, n.title, n.n_title, n.thumb)
	</insert>
	
	<insert id="margeNintendoExp">
		MERGE INTO game g
		USING (
		SELECT title, n_title, thumb
		FROM (
		SELECT title, n_title, thumb,
		ROW_NUMBER() OVER (PARTITION BY n_title ORDER BY title) AS rn
		FROM nintendo_exp
		) dsub
		WHERE rn = 1
		) n
		ON (g.n_title = n.n_title)
		WHEN MATCHED THEN
		UPDATE SET g.thumb = n.thumb
		WHERE n.thumb IS NOT NULL
		WHEN NOT MATCHED THEN
		INSERT (g_num, g_title, n_title, thumb)
		VALUES (seq_game.nextval, n.title, n.n_title, n.thumb)
	</insert>
	
	<insert id="margePlanetNew">
		MERGE INTO game g
		USING (
		SELECT title, n_title, thumb
		FROM (
		SELECT title, n_title, thumb,
		ROW_NUMBER() OVER (PARTITION BY n_title ORDER BY title) AS rn
		FROM planet_new
		) dsub
		WHERE rn = 1
		) n
		ON (g.n_title = n.n_title)
		WHEN MATCHED THEN
		UPDATE SET g.thumb = n.thumb
		WHERE n.thumb IS NOT NULL
		WHEN NOT MATCHED THEN
		INSERT (g_num, g_title, n_title, thumb)
		VALUES (seq_game.nextval, n.title, n.n_title, n.thumb)
	</insert>

</mapper>