<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.ReviewMapper">

    <!-- 리뷰 게시글 매핑 -->
    <resultMap id="reviewResult" type="com.example.demo.model.Review">
        <result property="rb_num" column="rb_num"/>
        <result property="id" column="id"/>
        <result property="rb_title" column="rb_title"/>
        <result property="rb_content" column="rb_content"/>
        <result property="rb_readcount" column="rb_readcount"/>
        <result property="rb_date" column="rb_date"/>
        <result property="rb_state" column="rb_state"/>
        <result property="rb_like" column="rb_like"/>
    </resultMap>
    
    <!-- 댓글 목록 매핑 -->
    <resultMap id="replyResultMap" type="com.example.demo.model.ReviewReply">
        <result property="rbr_num" column="RBR_NUM"/>
        <result property="rb_num" column="RB_NUM"/>
        <result property="id" column="ID"/>
        <result property="rbr_content" column="RBR_CONTENT"/>
        <result property="rbr_date" column="RBR_DATE"/>
        <result property="rbr_state" column="RBR_STATE"/>
    </resultMap>

   <!--  총 게시글 수 -->
<!--     <select id="getCount" parameterType="com.example.demo.model.Review" resultType="int"> -->
<!--         SELECT COUNT(*) FROM REVIEW_BOARD -->
<!--         <where> -->
<!--             rb_state = 0 -->
<!--             <choose> -->
<!--                 <when test="search == 'rb_title'"> -->
<!--                     AND rb_title LIKE '%' || #{keyword} || '%' -->
<!--                 </when> -->
<!--                 <when test="search == 'id'"> -->
<!--                     AND id LIKE '%' || #{keyword} || '%' -->
<!--                 </when> -->
<!--                 <when test="search == 'all'"> -->
<!--                     AND (rb_title LIKE '%' || #{keyword} || '%' OR rb_content LIKE '%' || #{keyword} || '%') -->
<!--                 </when> -->
<!--                 <when test="search == 'rb_state_recommend'"> -->
<!--                     AND rb_like = '추천' -->
<!--                 </when> -->
<!--             </choose> -->
<!--         </where> -->
<!--     </select> -->
    
    
    
    <!--  총 게시글 수 -->
     <select id="getCount" parameterType="com.example.demo.model.Review" resultType="int">
    SELECT COUNT(*) FROM REVIEW_BOARD
    <where>
        rb_state != 2
        <choose>
            <when test="search == 'rb_title'">
                AND rb_title LIKE '%' || #{keyword} || '%'
            </when>
            <when test="search == 'id'">
                AND id LIKE '%' || #{keyword} || '%'
            </when>
            <when test="search == 'all'">
                AND (rb_title LIKE '%' || #{keyword} || '%' OR rb_content LIKE '%' || #{keyword} || '%')
            </when>
            <when test="search == 'rb_state_recommend'">
                AND rb_like = '추천'
            </when>
        </choose>
    </where>
</select>

    
    
    
    
    
    
    
    <!-- 페이징 목록 -->
<!--     <select id="getPagedList" parameterType="com.example.demo.model.Pagenation" resultMap="reviewResult"> -->
<!--         SELECT * FROM ( -->
<!--             SELECT rownum rnum, a.* FROM ( -->
<!--                 SELECT * FROM REVIEW_BOARD -->
<!--                 <where> -->
<!--                     rb_state = 0 -->
<!--                     <choose> -->
<!--                         <when test="search == 'rb_title'"> -->
<!--                             AND rb_title LIKE '%' || #{keyword} || '%' -->
<!--                         </when> -->
<!--                         <when test="search == 'id'"> -->
<!--                             AND id LIKE '%' || #{keyword} || '%' -->
<!--                         </when> -->
<!--                         <when test="search == 'all'"> -->
<!--                             AND (rb_title LIKE '%' || #{keyword} || '%' OR rb_content LIKE '%' || #{keyword} || '%') -->
<!--                         </when> -->
<!--                         <when test="search == 'rb_state_recommend'"> -->
<!--                             AND rb_like = '추천' -->
<!--                         </when> -->
<!--                     </choose> -->
<!--                 </where> -->
<!--                 ORDER BY rb_num DESC -->
<!--             ) a -->
<!--             WHERE rownum &lt;= #{endRow} -->
<!--         ) -->
<!--         WHERE rnum &gt;= #{startRow} -->
<!--     </select> -->
    
    
    
    
    <!-- 페이징 목록 -->
   <select id="getPagedList" parameterType="com.example.demo.model.Pagenation" resultMap="reviewResult">
    SELECT * FROM (
        SELECT rownum rnum, a.* FROM (
            SELECT * FROM REVIEW_BOARD
            <where>
                rb_state != 2
                <choose>
                    <when test="search == 'rb_title'">
                        AND rb_title LIKE '%' || #{keyword} || '%'
                    </when>
                    <when test="search == 'id'">
                        AND id LIKE '%' || #{keyword} || '%'
                    </when>
                    <when test="search == 'all'">
                        AND (rb_title LIKE '%' || #{keyword} || '%' OR rb_content LIKE '%' || #{keyword} || '%')
                    </when>
                    <when test="search == 'rb_state_recommend'">
                        AND rb_like = '추천'
                    </when>
                </choose>
            </where>
            ORDER BY rb_num DESC
        ) a
        WHERE rownum &lt;= #{endRow}
    )
    WHERE rnum &gt;= #{startRow}
</select>

    
    
    
    
    
    

<!--     페이징 목록 -->
<!--     <select id="getPagedList" parameterType="com.example.demo.model.Pagenation" resultMap="reviewResult"> -->
<!--         SELECT * FROM ( -->
<!--             SELECT rownum rnum, a.* FROM ( -->
<!--                 SELECT * FROM REVIEW_BOARD -->
<!--                 <where> -->
<!--                     rb_state = 0 -->
<!--                     <choose> -->
<!--                         <when test="search == 'rb_title'"> -->
<!--                             AND rb_title LIKE '%' || #{keyword} || '%' -->
<!--                         </when> -->
<!--                         <when test="search == 'id'"> -->
<!--                             AND id LIKE '%' || #{keyword} || '%' -->
<!--                         </when> -->
<!--                         <when test="search == 'all'"> -->
<!--                             AND (rb_title LIKE '%' || #{keyword} || '%' OR rb_content LIKE '%' || #{keyword} || '%') -->
<!--                         </when> -->
<!--                         <when test="search == 'rb_state_recommend'"> -->
<!--                             AND rb_like = '추천' -->
<!--                         </when> -->
<!--                     </choose> -->
<!--                 </where> -->
<!--                 ORDER BY rb_num DESC -->
<!--             ) a -->
<!--             WHERE rownum &lt;= #{endRow} -->
<!--         ) -->
<!--         WHERE rnum &gt;= #{startRow} -->
<!--     </select> -->


    <!-- 상세보기 -->
    <select id="getReview" parameterType="int" resultMap="reviewResult">
        SELECT * FROM REVIEW_BOARD WHERE rb_num = #{rb_num}
    </select>

    <!-- 조회수 증가 -->
    <update id="updateReadCount" parameterType="int">
        UPDATE REVIEW_BOARD
        SET rb_readcount = rb_readcount + 1
        WHERE rb_num = #{rb_num}
    </update>

    <!-- 글 등록 -->
    <insert id="insert" parameterType="com.example.demo.model.Review">
        INSERT INTO REVIEW_BOARD (
            rb_num, id, rb_title, rb_content,
            rb_readcount, rb_date, rb_state, rb_like
        ) VALUES (
            review_board_seq.NEXTVAL,
            #{id}, #{rb_title}, #{rb_content},
            0, SYSDATE, #{rb_state}, #{rb_like}
        )
    </insert>

    <!-- 글 수정 -->
    <update id="update" parameterType="com.example.demo.model.Review">
        UPDATE REVIEW_BOARD
        SET rb_title = #{rb_title},
            rb_content = #{rb_content},
            rb_like = #{rb_like}
        WHERE rb_num = #{rb_num}
    </update>

    <!-- 글 삭제 (논리삭제) -->
    <update id="delete" parameterType="int">
        UPDATE REVIEW_BOARD
        SET rb_state = 2
        WHERE rb_num = #{rb_num}
    </update>

    <!-- 댓글 등록 -->
    <insert id="insertReply" parameterType="replyBoard">
        INSERT INTO RB_REPLY (
            RBR_NUM,
            RB_NUM,
            ID,
            RBR_CONTENT,
            RBR_DATE,
            RBR_STATE
        ) VALUES (
            rb_reply_seq.NEXTVAL,
            #{rb_num},
            #{id},
            #{rbr_content},
            SYSDATE,
            #{rbr_state}
        )
    </insert>

    <!-- 댓글 목록 조회 -->
    <select id="getReplyList" parameterType="int" resultMap="replyResultMap">
        SELECT * FROM RB_REPLY
        WHERE RB_NUM = #{rb_num} and rbr_state = 0
        ORDER BY RBR_DATE DESC
    </select>
    
    <!-- 댓글 수정 -->
    <update id="replyupdate" parameterType="replyBoard">
    	UPDATE RB_REPLY SET RBR_CONTENT=#{rbr_content}, rbr_date=sysdate 
    	where rbr_num=#{rbr_num}    
    </update>
    

    <!-- 댓글 삭제 -->
    <delete id="deleteReply" parameterType="int">
    	UPDATE RB_REPLY
        SET rbr_state = 1
        WHERE rbr_num = #{rbr_num}
    </delete>
    
    <!-- 신고 상태값 0,1 -->
    <update id="updateBoardState">
    UPDATE REVIEW_BOARD
    SET rb_state = #{state}
    WHERE rb_num = #{rb_num}
	</update>
    
    

</mapper>


