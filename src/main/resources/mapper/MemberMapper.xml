<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.MemberMapper">

	<!-- 재원님꺼 복사함  -->
	<select id="selectAllEmailSubscribers"
		resultType="com.example.demo.model.Member">
		SELECT * FROM MEMBER WHERE EMAIL_AD = 'Y'
	</select>
	<!-- 재원님꺼 복사함 -->

	<!-- 회원가입 -->
	<insert id="insert"
		parameterType="com.example.demo.model.Member">
		INSERT INTO MEMBER (
		ID, NAME, NICKNAME, PW, BIRTH_DATE,
		EMAIL_ID, EMAIL_DOMAIN,
		SOCIAL_PLATFORM, SOCIAL_ID, -- 여기가 문제
		PHONE,
		GENDER,
		EMAIL_AD, EMAIL_VERIFIED,
		JOIN_DATE, STATE
		)
		VALUES (
		#{id},
		#{name}, #{nickname}, #{pw}, #{birthDate},
		#{emailId}, #{emailDomain},
		#{socialPlatform, jdbcType=VARCHAR}, #{socialId, jdbcType=VARCHAR},
		#{phone}, #{gender},
		#{emailAd}, #{emailVerified},
		SYSDATE, #{state}
		)
	</insert>

	<!-- ID 중복 확인 -->
	<select id="countById" parameterType="String" resultType="int">
		SELECT
		COUNT(*) FROM member WHERE id = #{id}
	</select>

	<!-- 닉네임 중복 확인 -->
	<select id="countByNickname" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM member WHERE nickname = #{nickname}
	</select>

	<!-- 로그인 : ID로 회원 정보 조회 -->
	<select id="findById" parameterType="String"
		resultType="com.example.demo.model.Member">
		SELECT * FROM member WHERE id = #{id}
	</select>


	<!-- 회원정보 수정 -->
	<update id="updateMember"
		parameterType="com.example.demo.model.Member">
		UPDATE member
		SET
		name = #{name},
		nickname = #{nickname},
		phone = #{phone},
		email_id = #{emailId},
		email_domain = #{emailDomain},
		gender = #{gender}
		<if test="birthDate != null and birthDate != ''">
			, birth_date = TO_DATE(#{birthDate}, 'YYYY-MM-DD')
		</if>
		WHERE id = #{id}
	</update>

	<!-- 회원정보 수정 후 최신 정보 조회 -->
	<select id="selectMemberById" parameterType="String"
		resultType="com.example.demo.model.Member">
		SELECT * FROM member WHERE id = #{id}
	</select>


	<!-- 비밀번호 변경 -->
	<update id="updatePassword"
		parameterType="com.example.demo.model.Member">
		UPDATE member
		SET pw = #{pw}
		WHERE id = #{id}
	</update>

	<!-- 회원 탈퇴 : 실제 DB삭제 안하고 상태값만 바꿈 -->
	<update id="deleteMember" parameterType="String">
		UPDATE member
		SET state = 1
		WHERE id = #{id}
		AND state = 0
	</update>

</mapper>
