console.log("üü¢ mainButton.js Ïã§Ìñâ ÏãúÏûëÎê®");

if (typeof GameList === "undefined") {
  console.error("‚ùå GameListÍ∞Ä Ï†ïÏùòÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§. gameList.jsÎ•º Î®ºÏ†Ä Î°úÎìúÌïòÏÑ∏Ïöî.");
} else {
  console.log("‚úÖ GameList Î°úÎìú ÌôïÏù∏Îê®");
}

// Í≤åÏûÑ Î™©Î°ùÏùÑ HTMLÎ°ú Î†åÎçîÎßÅÌïòÎäî Ìï®Ïàò
function renderGames(data, containerId) {
  const container = document.getElementById(containerId);
  container.innerHTML = "";

  data.forEach(game => {
    container.innerHTML += `
      <div class="game-row">
        <a href="/game/${game.giNum}" class="game-item">
          <img src="${game.giThumb}" alt="${game.giTitle}" class="game-thumb"
		  onerror="this.onerror=null; this.src='/images/icons/noThumb.png';" />
          <div class="game-info">
            <div class="game-title">${game.giTitle}</div>
            <div class="game-price">
              ${
                game.giRate > 0
                  ? `<del>‚Ç©${game.giPrice.toLocaleString()}</del> ‚Üí ‚Ç©${game.giFprice.toLocaleString()}
                     <span class="game-discount">${game.giRate}% Ìï†Ïù∏</span>`
                  : `‚Ç©${game.giFprice.toLocaleString()}`
              }
            </div>
          </div>
        </a>
      </div>
    `;
  });
}

// DOMÏù¥ Î°úÎìúÎêú ÌõÑ Ïã§Ìñâ
window.addEventListener("DOMContentLoaded", () => {
  console.log("‚úÖ DOMContentLoaded Ïã§ÌñâÎê®");

  const loadByPlatform = (platform) => {
    console.log("üîò ÌîåÎû´Ìèº ÏÑ†ÌÉù:", platform);

    GameList.loadGames({
      amount: 10,
      state: "dc",
      platform,
      onSuccess: data => {
        console.log("üì• Ìï†Ïù∏ Í≤åÏûÑ Îç∞Ïù¥ÌÑ∞ ÎèÑÏ∞©:", data);
        renderGames(data, "discounted-games");
      }
    });

    GameList.loadGames({
      amount: 10,
      state: "new",
      platform,
      onSuccess: data => {
        console.log("üì• Ïã†ÏÉÅ Í≤åÏûÑ Îç∞Ïù¥ÌÑ∞ ÎèÑÏ∞©:", data);
        renderGames(data, "new-games");
      }
    });
  };

  // Ï¥àÍ∏∞ Steam ÌîåÎû´Ìèº Í∏∞Ï§Ä Î°úÎî©
  loadByPlatform("steam");

  // ÌîåÎû´Ìèº Î≤ÑÌäº ÌÅ¥Î¶≠ Ïãú Îã§Ïãú Î°úÎî©
  document.querySelectorAll(".platform-btn").forEach(button => {
    button.addEventListener("click", () => {
      // Î≤ÑÌäº ÌôúÏÑ±Ìôî UI
      document.querySelectorAll(".platform-btn").forEach(btn => btn.classList.remove("active"));
      button.classList.add("active");

      const platform = button.dataset.platform;
      loadByPlatform(platform);
    });
  });
});